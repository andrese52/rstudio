library(haven)
ILfullint2 <- read_dta("~/trafficstop/ILfullint2.dta")
View(ILfullint2)
save.image("~/trafficstop/ILfullint2.RData")
View(ILfullint2)
View(ILfullint2)
#Crabtree Assignment 8 Spring 2013
#Evaluating interactions
# Set Home Directory
setwd("~/Dropbox/DFCCyberCarpentryRShinyDemo")
#Clear Objects
rm(list=ls(all=TRUE))
load("Assign8.Rdata")
# see what variables are in the data
attach(Data)
names(Data)
#load packages for assignment
install.packages("calibrate")
library(calibrate)
# Get number of observations
n<-length(Data$y)
n
#produce summary statistics for the data
# Mean, SD, Min and Max
summary(Data)
sdy<-sd(Data$y)
sdx1<-sd(Data$x1)
sdx2<-sd(Data$x2)
sdx3<-sd(Data$x3)
sdy
sdx1
sdx2
sdx3
#Get frequencies for gender
table(Data$gender)
#Create Gender Dummy male = 1
m <- rep(NA,n)
m[gender=="Male"] <- 1
m[gender!= "Male"] <- 0
#run model on everything
model1 <- lm(y~x1+x2+x3+m+x1*m+x2*x3)
k <- 7
#summary of model
summary (model1)
#Put coef numbers in array
coef <- summary(model1)$coef
coef
# get vcv for t tests
vcv <- vcov(model1)
vcv
#Calculate ME's for part 2 a-f
#ME of x1 on y =0 for men
mea <- coef[2,1] + coef[6,1]*x1
mea
#ME of x1 on y =0 for women
meb <- coef[2,1]
meb
#ME of x1 on y men = ME of x1 ony women
mec <- coef[6,1] * x1
mec
#ME of gender on y when x1=0
med <- coef[5,1]
med
#ME of gender on y when x1 = meanx1 - sdx1
mee <- (coef[5,1] + (coef[6,1] * (mean(x1)-sdx1) ) )
mee
#ME of gender on y when x1 = meanx1 + sdx1
mef <- (coef[5,1] + (coef[6,1] * (mean(x1)+sdx1) ) )
mef
# Calculate SE's for part 2 a-f
#SE for a
sea <- sqrt (     (vcv[2,2]   + ( (x1^2) * vcv[6,6])   +   (x1 * (2*vcv[2,6])) )         )
sea
#se for b
seb <- sqrt(vcv[2,2])
seb
#SE for c
sec <- sqrt (     ( (x1^2) * vcv[6,6])      )
sec
#SE for d
sed <- sqrt(vcv[5,5])
sed
#SE for e
see <- sqrt (   vcv[5,5] +   ( (mean(x1)-sdx1)^2 * vcv[6,6] )    +  ( (mean(x1)-sdx1) * (2*vcv[2,6]))     )
see
#SE for f
sef <- sqrt (   vcv[5,5] +   ( (mean(x1)+sdx1)^2 * vcv[6,6] )    +  ( (mean(x1)+sdx1) * (2*vcv[2,6]))     )
sef
# Calculate T values and p values for part 2 a-f
ta <- mea/sea
ta
tb <- meb/seb
tb
tc <- mec/sec
tc
td <- med/sed
td
te <- mee/see
te
tf <- mef/sef
tf
pta <- 2 * (1-pt(abs(ta),(n-k)))
pta
ptb <- 2 * (1-pt(abs(tb),(n-k)))
ptb
ptc <- 2 * (1-pt(abs(tc),(n-k)))
ptc
ptd <- 2 * (1-pt(abs(td),(n-k)))
ptd
pte <- 2 * (1-pt(abs(te),(n-k)))
pte
ptf <- 2 * (1-pt(abs(tf),(n-k)))
ptf
############################################
# Section 3 and effects of x2 and x3 on y
#Calculate ME's for part 3 2a-2f
#ME of x2 on y =0 for x3=0
me2a <- coef[3,1]
me2a
#ME of x2 on y =0 for x3=mx3-sd3
me2b <- coef[3,1] + ( coef[7,1] * ( x2 * (mean(x3)-sdx3) ) )
me2b
#ME of x2 on y =0 for x3=mx3+sd3
me2c <- coef[3,1] + ( coef[7,1] * ( x2 * (mean(x3)+sdx3) ) )
me2c
#ME of x3 on y when x2=0
me2d <- coef[4,1]
me2d
#ME of x3 on y when x2 = meanx2 - sdx2
me2e <- (coef[4,1] + (coef[7,1] * ( x3 * (mean(x2)-sdx2) ) ) )
me2e
#ME of x3 on y when x2 = meanx2 + sdx2
me2f <- (coef[4,1] + (coef[7,1] * ( x3 * (mean(x2)+sdx2) ) ) )
me2f
# Calculate SE's for part 3--- 2a-2f
#SE for 2a
se2a <- sqrt(vcv[3,3])
se2a
#se for 2b
se2b <- sqrt (  (   vcv[3,3] +   ( x2 * (mean(x3)-sdx3))^2 * vcv[7,7] )      +   (x2 * (mean(x3)-sdx3)) * (2*vcv[3,7])    )
se2b
#SE for 2c
se2c <- sqrt (  (   vcv[3,3] +   ( x2 * (mean(x3)+sdx3))^2 * vcv[7,7] )      +   (x2 * (mean(x3)+sdx3)) * (2*vcv[3,7])    )
se2c
#SE for 2d
se2d <- sqrt(vcv[4,4])
se2d
#SE for 2e
se2e <- sqrt (  (   vcv[4,4] +   ( x3 * (mean(x2)-sdx2))^2 * vcv[7,7] )      +   (x3 * (mean(x2)-sdx2)) * (2*vcv[4,7])    )
se2e
#SE for 2f
se2f <- sqrt (  (   vcv[4,4] +   ( x3 * (mean(x2)+sdx2))^2 * vcv[7,7] )      +   (x3 * (mean(x2)+sdx2)) * (2*vcv[4,7])    )
se2f
# Calculate T values and p values for part 3 --- 2a-2f
t2a <- me2a/se2a
t2a
t2b <- me2b/se2b
t2b
t2c <- me2c/se2c
t2c
t2d <- me2d/se2d
t2d
t2e <- me2e/se2e
t2e
t2f <- me2f/se2f
t2f
pt2a <- 2 * (1-pt(abs(t2a),(n-k)))
pt2a
pt2b <- 2 * (1-pt(abs(t2b),(n-k)))
pt2b
pt2c <- 2 * (1-pt(abs(t2c),(n-k)))
pt2c
pt2d <- 2 * (1-pt(abs(t2d),(n-k)))
pt2d
pt2e <- 2 * (1-pt(abs(t2e),(n-k)))
pt2e
pt2f <- 2 * (1-pt(abs(t2f),(n-k)))
pt2f
#Part 4 Plots
# part a
s.x1 <- seq(min(x1),max(x1),length.out=n)
yhatmen <- coef(model1)[1] + coef(model1)[2]*s.x1 + coef(model1)[5] + coef(model1)[6]*s.x1
plot(s.x1,yhatmen,xlab="Values for X1", ylab="Predicted Value of Y",col="red",xlim=c(min(s.x1),max(s.x1)),ylim=c(min(yhatmen),max(yhatmen)))
title(main="Predicted effect of X1 on Y for Men")
yhatwomen <- coef(model1)[1] + coef(model1)[2]*s.x1
plot(s.x1,yhatwomen,xlab="Values for X1", ylab="Predicted Value of Y",col="blue",xlim=c(min(s.x1),max(s.x1)),ylim=c(min(yhatwomen),max(yhatwomen)))
title(main="Predicted effect of X1 on Y for Women")
# part b
me.gender <- coef(model1)[5] + coef(model1)[6]*s.x1
plot(s.x1,me.gender,xlab="Values for X1", ylab="Marginal Effect of Gender on Y",xlim=c(min(s.x1),max(s.x1)),ylim=c(min(me.gender),max(me.gender)))
title(main="Marginal Effect of Gender on Y for all values of X1")
se.gender <- sqrt(vcv[5,5] + (s.x1^2)*vcv[6,6] + 2*s.x1*vcv[5,6])
lci <- me.gender - 1.96*se.gender
uci <- me.gender + 1.96*se.gender
lines(s.x1,lci,col="red",lwd=2,lty=2)
lines(s.x1,uci,col="red",lwd=2,lty=2)
abline(h=0)
abline(v=s.x1[abs(lci)==min(abs(lci))],col="blue",lty=4)
abline(v=s.x1[abs(uci)==min(abs(uci))],col="blue",lty=4)
# part c
s.x3 <- seq(min(x3),max(x3),length.out=n)
me.x2 <- coef(model1)[3] + coef(model1)[7]*s.x3
plot(s.x3,me.x2,xlab="Values for X3", ylab="Marginal Effect of X2 on Y",xlim=c(min(s.x3),max(s.x3)),ylim=c(min(me.x2),max(me.x2)))
title(main="Marginal Effect of X2 on Y for all values of X3")
se.x2 <- sqrt(vcv[3,3] + (s.x1^2)*vcv[7,7] + 2*s.x1*vcv[3,7])
lci2 <- me.x2 - 1.96*se.x2
uci2 <- me.x2 + 1.96*se.x2
lines(s.x3,lci2,col="red",lwd=2,lty=2)
lines(s.x3,uci2,col="red",lwd=2,lty=2)
abline(h=0)
abline(v=s.x3[abs(lci2)==min(abs(lci2))],col="blue",lty=4)
abline(v=s.x3[abs(uci2)==min(abs(uci2))],col="blue",lty=4)
library(shiny); source('ShinyAppLaunch.R')
runApp('DemoShinyHistApp')
runApp('DemoShinyHistApp')
source('ShinyAppLaunch.R')
source('ShinyAppLaunch.R')
source('~/Dropbox/DFCCyberCarpentryRShinyDemo/ShinyAppLaunch.R')
runExample("03_reactivity")
source('ShinyAppLaunch.R')
source('ShinyAppLaunch.R')
source('ShinyAppLaunch.R')
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
shiny::runApp('~/Dropbox/DFCCyberCarpentryRShinyDemo/DemoShinyDataViewApp')
source('~/Dropbox/DFCCyberCarpentryRShinyDemo/ShinyAppLaunch.R')
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
library(shiny); source('~/Dropbox/DFCCyberCarpentryRShinyDemo/ShinyAppLaunch.R')
setwd("~/Dropbox/DFCCyberCarpentryRShinyDemo")
source('ShinyAppLaunch.R')
source('ShinyAppLaunch.R')
runApp('DemoShinyDataViewApp')
runApp('DemoShinyDataViewApp')
runApp('DemoShinyDataViewApp')
runApp('DemoShinyDataViewApp')
source('ShinyAppLaunch.R')
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
library(shiny); source('~/Dropbox/DFCCyberCarpentryRShinyDemo/ShinyAppLaunch.R')
source('ShinyAppLaunch.R')
source('ShinyAppLaunch.R')
source('ShinyAppLaunch.R')
